# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества.
# m - кол-во элементов второго множества.
# Затем пользователь вводит сами элементы множеств.
# n = 11, m = 6
# 2 4 6 8 10 12 10 8 6 4 2
# 3 6 9 12 15 18
# 6 12 |
# | --- | --- |

n = (int(input("Введите число N элементов: ")))
num_list_1 = []
for i in range(n):
    num = int(input("Введите num "))
    num_list_1.append(num)
print(num_list_1)

m = (int(input("Введите число M элементов: ")))
num_list_2 = []
for i in range(m):
    num = int(input("Введите num "))
    num_list_2.append(num)
print(num_list_2)

num_list3 = num_list_1 + num_list_2

print(num_list3)
checked_nums_list = []
for i in num_list3:
    if num_list3.count(i) > 1 and i not in checked_nums_list:
        checked_nums_list.append(i)
        print(i)

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику.
# Она растет на круглой грядке, причем кусты высажены только по окружности.
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод – на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод,
# которое может собрать за один заход собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.
# | 4 -> 1 2 3 4
# 9 |

beries_list = [int(input('Введите кол-во ягод: ')) for _ in range(int(input('Введите кол-во кустов: ')))]
maxx = 0
for ind in range(0, len(beries_list)):
    if beries_list[ind] + beries_list[ind - 1] + beries_list[ind - 2] > maxx:
        maxx = beries_list[ind] + beries_list[ind - 1] + beries_list[ind - 2]
print(maxx)
